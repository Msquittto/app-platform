{
  "ok": "OK",
  "hello": "Hello",
  "cancel": "Cancel",
  "official": "Official",
  "multiTurnConversation": "Multi-Turn Chat",
  "multipleRoundsOfConversation": "Multi-Turn Chat",
  "newChat": "New Chat",
  "accuracyNotice": "- All content is generated by our AI foundation model. -",
  "historyChat": "Historical Chats",
  "clear": "Clear",
  "search": "Search",
  "continueChat": "Continue",
  "daysAgo": "d ago",
  "minutesAgo": "m ago",
  "hoursAgo": "h ago",
  "secondsAgo": "s ago",
  "justNow": "Just now",
  "delete": "Delete",
  "receiveTips": "The content is generated by the AI foundation model and does not reflect application developers' views. Do not delete or modify this tag",
  "plsEnter": "Enter",
  "copy": "Copy",
  "copySucceeded": "Copied",
  "alert": "Confirm Clearing",
  "clearHistoryChatContent": "The chat data cannot be restored once cleared. Are you sure you want to continue?",
  "stopResponding": "Stop Responding",
  "terminateFailed": "Failed to stop the chat",
  "conversationTerminated": "Chat stopped",
  "dataParseError": "Data parsing error",
  "appDevelopment": "Application Development",
  "mineApp": "My Applications",
  "teamApp": "Team's Applications",
  "create": "Create",
  "createApp": "Create Application",
  "name": "Name",
  "plsEnterName": "Enter a name",
  "description": "Overview",
  "openingRemarks": "Prologue",
  "icon": "Icon",
  "uploadManually": "Upload",
  "appDetail": "Application Details",
  "overview": "Summary",
  "plugin": "Plugins",
  "knowledgeBases": "Knowledge Bases",
  "knowledgeBase": "Knowledge Base",
  "creativeInspiration": "Inspirations",
  "createAt": "Created at",
  "app": "Application",
  "prologue": "Prologue",
  "toArrange": "Orchestrate",
  "active": "Released",
  "activing": "Publishing",
  "inactive": "Unreleased",
  "modifyingBasicInfo": "Modify Basic Information",
  "operationSucceeded": "Operation successful",
  "deleteSuccess": "Deleted successful",
  "createdAt": "Created at",
  "uploadingPlugin": "Uploading Plugin",
  "editSucceeded": "Modified",
  "interfaceConfiguration": "UI Configuration",
  "selectRepository": "Select Knowledge Base",
  "market": "Market",
  "owner": "Individual",
  "knowledgeBaseList": "Knowledge Bases",
  "numberOfPieces": "Records",
  "varType": "Type",
  "saveConfigSuccess": "Configuration saved",
  "guessAsk": "You May Want to Ask",
  "recommendedTips": "Define up to three questions recommended for the first chat with the application",
  "question": "Question",
  "changeBatch": "Refresh",
  "invalidTip": "Inspirations can be used as preset questions on the chat screen",
  "createInspiration": "Create Inspiration",
  "editInspiration": "Modify",
  "modify": "Modify",
  "start": "Start",
  "retrieve": "Common Search",
  "LLM": "Foundation Model",
  "end": "End",
  "condition": "Condition",
  "input": "Input",
  "startNodeInputPopover": "<p>Defines the input parameters required for starting the workflow. </p>\n<p>The foundation model will read the input content during </p>\n<p>a chat with a bot, so as to start the workflow at the appropriate </p>\n<p>time and fill in the correct information.</p>",
  "pleaseInsertName": "Enter a name.",
  "pleaseInsertFieldName": "Enter a field name.",
  "paramNameCannotBeEmpty": "Enter a field name.",
  "fieldNameRule": "Enter only letters, digits, and underscores (_). It must start with a letter or underscore (_).",
  "fieldType": "Field Type",
  "fieldDescription": "Field Description",
  "pleaseInsertFieldDescription": "Enter field description.",
  "paramDescriptionCannotBeEmpty": "Enter field description.",
  "requiredOrNot": "Mandatory",
  "byConversationTurn": "By chat turn",
  "conversationTurnCannotBeEmpty": "Select a chat turn.",
  "memoryModeCannotBeEmpty": "Select a memory mode.",
  "pleaseSelectADialogueRound": "Chat Turn",
  "spacesAreNotAllowed": "Do not enter any space.",
  "default": "Default",
  "knowledgeBaseInputPopover": "Enter key information to be matched from the knowledge base.",
  "reference": "Reference",
  "knowledgeBasePopover": "<p>Select the knowledge scope for matching. Information </p>\n<p>is matched only from the selected knowledge scope.</p>",
  "systemContextPopover": "<p>Context generated for each chat, which is read-only and includes the following attributes of the application and chat instance:</p>\n<p>1.instanceId: unique ID of each chat instance.</p>\n<p>2.appId: unique ID of the application to which the chat instance belongs.</p>\n<p>3.memories: list of historical QA pairs of the application to which the chat instance belongs.</p>\n<p>4.useMemory: indicates whether the chat uses historical records.</p>\n<p>5.userId: unique ID of the user.</p>",
  "returnsTheMaximumValue": "Max. Return Value",
  "returnsTheMaximumValuePopover": "<p>Maximum number of paragraphs returned from the knowledge </p>\n<p>to the model. A larger value will correspond to more returned content.</p>",
  "output": "Output",
  "knowledgeBaseOutputPopover": "<p>The output list contains information that best matches the </p>\n<p>input parameters and is obtained from all selected knowledge bases.</p>",
  "llmInputPopover": "<p>Enter information to be added to the prompt word template.</p>\n<p> The information can be referenced by the prompt word template.</p>",
  "llm": "Foundation Model",
  "model": "Model",
  "pleaseSelectTheModelToBeUsed": "Select a model.",
  "temperature": "Temperature",
  "pleaseEnterAValueRangingFrom0To1": "Enter a number from 0 to 1.",
  "llmTemperaturePopover": "<p>Controls the randomness of text generated by the foundation model.</p>\n<p> The model will generate more diverse texts with increased uncertainty if this parameter is set</p>\n<p> to a higher value, and generate high-probability words with reduced uncertainty if this parameter </p>\n<p>is set to a lower value.</p>",
  "prompt": "User Prompt Word",
  "promptPopover": "<p>Edit the prompt words of the foundation model to implement relevant functions. </p>\n<p>Variables can be imported from input parameters using {{Variable name}}.</p>",
  "systemPrompt": "System Prompt Words",
  "systemPromptPlaceHolder": "Enter prompt words to preset an identity for the application.",
  "promptPlaceHolder": "You can use {{Variable name}} to associate a variable name in the input.",
  "paramCannotBeEmpty": "Enter a value.",
  "llmOutputPopover": "Content generated after the foundation model is executed.",
  "modeSelect": "Mode",
  "directlyOutputTheResult": "Directly output result",
  "endOutputPopover": "<p>These variables will be output after the bot calls the workflow. </p>\n<p>In variable return mode, the bot summarizes these variables and replies to the user.</p>\n<p> In direct answer mode, the bot replies only variables that can be used when the card is configured.</p>",
  "conditionBranch": "Condition Branch",
  "addBranch": "Add Branch",
  "compareObject": "Compared Object",
  "pleaseSelectCondition": "Select",
  "fieldValueCannotBeEmpty": "Required field.",
  "addCondition": "Add Condition",
  "pleaseSelect": "Select",
  "rename": "Rename",
  "runSuccessfully": "Successful",
  "running": "Running",
  "notRunning": "Not running",
  "runFailed": "Failed",
  "parsingFailed": "Parsing failed",
  "savingFailed": "Failed",
  "deleteFail": "Failed",
  "uploadFile": "Upload File",
  "conversationFailed": "Failed",
  "responseSpeed": "Response Speed",
  "user": "User",
  "userFeedback": "User Feedback",
  "applicationAnswer": "Application Answer",
  "feedbackDetails": "Feedback Details",
  "basicInformation": "Basic Info",
  "answerDetails": "Answer Details",
  "userAnswer": "User Answer",
  "noFeedback": "No Feedback",
  "like": "Like",
  "unLike": "UnLike",
  "timeUse": "Time to use",
  "deepThink": "Deep thinking",
  "deepThinkFinished": "Deep thinking",
  "fileLabel": "File",
  "picture": "Picture",
  "audio": "Audio",
  "video": "Video",
  "dataError": "Data Error",
  "runTerminate": "Terminate",
  "runResult": "Running Result",
  "closeRunResult": "Hide Running Result",
  "promptName": "Prompt Word",
  "promptTextarea": "Use {{Variable name}} to add a variable",
  "onlySupported": "Only",
  "filesOfType": "files are supported",
  "noPluginSelected": "No plugin is selected",
  "viewParam": "View Parameters",
  "parsedSuccessfully": "File parsed",
  "upload": "Upload",
  "startParsed": "Start Parsing",
  "uploadZip": "Upload a plugin package",
  "fileUploadContent1": "Click to upload a file or drag-and-drop it here",
  "fileUploadContent2": "Only ZIP files are supported, each up to 100 MB. A maximum of one ZIP files can be uploaded at a time",
  "fileUploadContent3": "The file name cannot contain Chinese characters, and the plugin name can contain only letters, digits, and Chinese characters",
  "uploadTo": "Upload to ",
  "personalSpace": "Individual space",
  "zipDescription": "The system only obtains 100 plugins from each ZIP package. A plugin's name cannot exceed 256 characters",
  "uploadTip": "You are advised to debug plugins locally to avoid a deployment failure. New plugins will overwrite the existing plugins of the same type",
  "uploadTool": "Upload Tool",
  "confirmDeployment": "Confirm Deployment",
  "deployNone": "You have not deployed a plugin",
  "pluginTips": "If deployed plugins are canceled, the running applications that use the plugins will be unavailable. Exercise caution when performing this operation",
  "pluginTips2": "It may take some time to deploy plugins. Pay attention to the deployment status. After plugins are successfully deployed, the tools in the plugins can be used",
  "deployPlugin": "Deploy Plugin",
  "pluginResourcePool": "Plugin Resource Pool",
  "pluginName": "Name",
  "details": "Details",
  "selected": "Selected",
  "selectedOptions": "A maximum of 20 plugins can be deployed",
  "uploadOptions": "A maximum of 3000 plugins can be uploaded",
  "tool": "Tool",
  "toolDetails": "Tool Details",
  "quoteNumber": "References",
  "userNumber": "Users",
  "inputParam": "Input Parameters",
  "outputParam": "Output Parameters",
  "paramName": "Parameter",
  "paramType": "Type",
  "paramDescription": "Description",
  "close": "Close",
  "deploying": "Deploy",
  "pluginDeploying": "Deploy Plugin",
  "deployedSuccessTips": "The plugins have been deployed and can be used now",
  "deployed": "Deployed",
  "deployment": "Deploying",
  "notDeployed": "Undeployed",
  "pluginManagement": "Application Plugin",
  "viewInspirations": "View inspirations",
  "chatWith": "Talking with",
  "return": "Back",
  "applicationMarket": "Application Market",
  "noData": "No data available",
  "deleteAppSuccess": "Selected application deleted",
  "deleteAppModalTitle": "Confirm Deletion",
  "deleteAppModalAlert": "The application cannot be restored once deleted. If you want to use it later, you need to create it again. Are you sure you want to delete it",
  "graphUpdateSuccess": "Advanced settings updated",
  "audioFailTips": "The browser you are using does not support the recording function",
  "plsEnterFlowRequiredItem": "Set mandatory parameters",
  "publishHistory": "Release History",
  "cannotRevertVersion": "Historical versions cannot be rolled back",
  "toTalk": "Chat",
  "updateLog": "Update Log",
  "gotIt": "Got It",
  "successReleased": "Application released",
  "versionTip": "Invalid version format",
  "releaseTip": "The version to be released will overwrite the historical version",
  "releaseApplication": "Release Application",
  "releaseTip2": "Release the application only after it passes the debugging",
  "versionName": "Version",
  "announcements": "Bulletin",
  "debugTip": "Debug Application",
  "testTip": "Debug the application to ensure it runs properly before release.",
  "testTip2": "Debug the workflow to ensure it runs properly before release.",
  "debug": "Debug",
  "plsEnterRequiredItem": "Set mandatory parameters",
  "expandConfig": "Expand config",
  "collapseConfig": "Collapse config",
  "flowChangeWarningContent": "The workflow configuration items have been modified. Debug the workflow again. The workflow can be released once it passes the debugging",
  "noMoreTips": "Do not remind me again",
  "plsEnterString": "Enter a string",
  "plsEnterInt": "Enter an integer",
  "plsEnterValidNumber": "Enter a number",
  "plsEnterNumber": "Enter a number",
  "debugRun": "Test Running",
  "startNode": "Start Node",
  "run": "Run",
  "publish": "Release",
  "basic": "Basic",
  "more": "More",
  "workflowOrchestration": "Orchestrate Workflow",
  "others": "Other",
  "all": "All",
  "invalidCategory": "An invalid category exists. Modify it first",
  "categoryEmpty": "The category name cannot be empty",
  "categoryLevel": "The name of a category must be unique at a level",
  "categoryExists": "An inspiration already exists under the category. Delete the inspiration first",
  "addClassification": "Add",
  "editClassification": "Edit",
  "categoryConfiguration": "Configure Category",
  "automaticDesc": "If this function is enabled, the system will automatically send the inspiration prompt word to the application on the chat screen",
  "automaticDesc2": "If this function is disabled, the inspiration prompt word will be displayed in the dialog box on the chat screen by default and can be modified. The prompt word is sent to the application by users",
  "automatic": "Auto-send Prompt Word",
  "categoryLimit": "A maximum of 100 categories can be added at the same level. Delete some categories and try again.",
  "categoryDepthError": "System error, which causes the failure in obtaining the embedding level. Contact the administrator.",
  "categoryDepthLimit": "A maximum of 10 embedding levels can be added.",
  "classify": "Category",
  "operate": "Operation",
  "sourceInfo": "Source Information",
  "sourceType": "Source Type",
  "source": "Source",
  "backendType": "Type",
  "total": "Total records",
  "descriptionMessage": "Enter an overview",
  "promptMessage": "Enter a prompt word",
  "promptVar": "Prompt Word Variable",
  "variable": "Variable",
  "selectionBox": "Selection box",
  "selectionService": "Service",
  "selectionCustom": "Custom",
  "multiple": "Multi-Answer",
  "requestFailed": "Request failed.",
  "categoryAdded": "The category has been selected and you cannot add a subcategory for it.",
  "categoryDeleted": "The category has been selected and you cannot delete a subcategory from it.",
  "editedSelected": "The category has been selected and you cannot edit it.",
  "fileParseError": "Failed to parse",
  "addedSuccessfully": "Successful",
  "copyFailed": "Copy failed.",
  "promptVarPlaceHolder": "Use English semicolon ';' to separate different options.",
  "nodeTextDuplicate": "The node name already exists.",
  "attributeNameMustBeUnique": "Enter a unique field name.",
  "nameError": "A plugin cannot contain tools that share the same name.",
  "result": "Foundation model",
  "endResult": "Final result",
  "fieldTypeMismatch": "Invalid type.",
  "sameTypeNodeCannotMoreThan20": "The number of nodes of the same type cannot exceed 20.",
  "allNodeCannotMoreThan100": "The total number of nodes cannot exceed 100.",
  "workflowAtLeast3Nodes": "Workflow verification failed. A single workflow must contain at least three nodes.",
  "unselectAll": "Deselect All",
  "selectAll": "Select All",
  "addApp": "Create Application",
  "fieldName": "Field Name",
  "fieldValue": "Field Value",
  "pleaseSelectAMemoryMode": "Select Memory Mode",
  "morePlugins": "More Plugins",
  "newChatTips": "The application does not exist or has been deleted",
  "sseFailed": "Response timeout",
  "systemEnv": "System context",
  "expand": "Expand",
  "toolError": "The configuration file is missing from the uploaded file. File: {{textName}}",
  "errorTips0": "Configuration file parsing failed. Reason: The definitions in definitionGroups of the compressed package {{textName}} lack schema",
  "errorTips1": "Configuration file parsing failed. Reason: {{errorName}} does not exist in the compressed package {{textName}}",
  "errorTips2": "Configuration file parsing failed. Reason: {{errorName}} does not exist in the compressed package {{textName}} definitionGroups",
  "errorTips3": "Configuration file parsing failed. Reason: {{errorName}} does not exist in the compressed package {{textName}} toolGroups",
  "errorTips4": "Configuration file parsing failed. Reason: The name {{errorName}} is wrong and can only contain Chinese, English, numbers, hyphens (-), and underscores (_), and cannot start with a hyphen or underscore!",
  "startFlowFailed": "Process debugging failed to start, please contact the administrator.",
  "evalution": "Application Evaluation",
  "evaluation": "Application Evaluation",
  "appMarket": "Application Market",
  "releaseEvaluation": "Release assessment tasks",
  "releaseTip3": "The assessment task cannot be modified after it is published. Are you sure?",
  "evaluateTasks": "Assessment Tasks",
  "evaluateTestSet": "Evaluate the test set",
  "evaluateName": "Task Name",
  "evaluateDescription": "Task Description",
  "isPublish": "Publish",
  "instanceStatus": "Running status",
  "passRate": "Use case pass rate",
  "viewReport": "View Report",
  "createEvaluate": "Creating an Assessment Task",
  "plsEnterEvaluateDescription": "Please enter a task description",
  "generationTime": "Generated on",
  "descriptionTip1": "Evaluation and analysis report",
  "evaluateCreateAt": "Evaluation start time",
  "evaluateOverview": "Overview",
  "evaluateCharts": "Evaluation Chart",
  "evaluateResult": "Evaluation results",
  "applicationName": "Application Name",
  "applicationVersion": "Application version",
  "evaluateFinishAt": "Evaluation end time",
  "evaluator": "Evaluator",
  "score": "point",
  "totalUseCases": "Overall use case",
  "successfulUseCases": "Successful Use Cases",
  "failedUseCases": "Failure Use Case",
  "scores": "Fraction",
  "evaluationData": "Evaluate data",
  "useCase": "Use Cases",
  "evaluationTime": "Evaluation time:",
  "deleted": "Deleted",
  "underEvaluation": "Evaluating",
  "waitingForEvaluation": "To be evaluated",
  "createdBy": "Founder",
  "finishEvaluation": "Evaluation Completed",
  "failedEvaluation": "Evaluation Failure",
  "testSetName": "Test suite name",
  "testSetDescription": "Test suite description",
  "modificationTime": "Modification time",
  "evaluationDetails": "Test suite details",
  "evaluationUploadTips": "Please upload and parse the file!",
  "createTestSet": "Create a new test suite",
  "editTestSet": "Editing a Test Set",
  "uploadTips1": "The file size cannot exceed 5MB!",
  "uploadTips2": "The maximum file size cannot exceed 5MB, and the file only supports .json format",
  "startParsing": "Start parsing",
  "noUploadTips": "Please upload the file and parse it!",
  "node": "Node",
  "problemWithConnection": "There is a problem with the connection",
  "optimizationInputPopover": "Enter the information that needs to be added to the prompt word template, which can be referenced by the prompt word template.",
  "optimizationOutputPopover": "Output of the Problem Optimization Node",
  "optimizationConfig": "Optimize configuration",
  "conversationDescription": "Dialogue Background Description",
  "conversationBackground": "Dialogue background",
  "userPromptTemplate": "User prompt word template",
  "optimizationPrompt": "Prompt word",
  "byConversation": "By conversation",
  "byQuery": "By Question",
  "queryConfig": "Problem Configuration",
  "conversationConfig": "Dialog Configuration",
  "conversationNumber": "Number of conversations",
  "queryNumber": "Number of questions",
  "conversationBackgroundPopover": "Dialogue background description information template",
  "optimizationPromptPopover": "Edit the prompt words of the large model to achieve the corresponding functions. \nYou can use {{name}} to introduce variables from the input parameters.",
  "startDebugFail": "Failed to start debugging",
  "noKnowledgeBase": "Node is missing knowledge base",
  "noSearchOption": "The node is missing search parameter configuration",
  "addKnowledge": "Add a knowledge base",
  "advancedConfiguration": "Advanced Configuration",
  "extractVariables": "Extract variables",
  "importTools": "Import from tool",
  "textExtractionOutputPopover": "Output of the Text Extraction Node",
  "textExtractionInputPopover": "The input of the text extraction node can refer to the input of the comprehensive node, or directly input a text",
  "textToBeExtracted": "The text to be extracted",
  "TextExtractionSchema": "You can use the import tool or set it manually\nConstruct a structure",
  "historyRecord": "History",
  "variableName": "Variable Name",
  "variableType": "Variable Types",
  "variableDescription": "Describe",
  "textExtractionPrompt": "Extract description on request",
  "fieldDescriptionCannotBeEmpty": "Field description cannot be empty",
  "added": "Added",
  "passConditionPrefix": "Entry conditions",
  "branch": "Branch",
  "passElseCondition": "Enter the Else branch",
  "deploymentFailed": "Deployment Failed",
  "noAnnouncement": "No Announcement",
  "codeInputPopover": "Enter variables to be added to the code. The added variables can be directly referenced in the code.",
  "codeInputErrorMsg": "Invalid format:",
  "codeExecuteErrorMsg": "System error. Contact the system administrator.",
  "codeCannotEmpty": "The code cannot be empty.",
  "code": "Code",
  "editInIde": "Edit in IDE",
  "codePopover": "<p><strong>1. Function editing description: </strong>Compile the structure of a function by referring to the code example. </p>\n<p>You can directly use the variables in the input parameters and return an object, array, or other basic types of data as the output result. </p>\n<p>The method name must be main, and it cannot be asynchronous. Additionally, multiple functions cannot be compiled. </p>\n<p>By default, the system introduces dependencies including <strong>asyncio</strong>, <strong>json</strong>, <strong>numpy</strong>, and <strong>typing</strong>. </p>\n<p><strong>2. Shortcut key description: </strong>Press F1 on the keyboard to open the shortcut key description window.",
  "codeOutputPopover": "<p>Variable output after code execution. </p>\n<p>Ensure that the variable name and type defined here are the same as those in the return object of the code.</p>",
  "otherQuestion": "Other issues",
  "classificationInputPopover": "Enter the information that needs to be added to the prompt word template, which can be referenced by the prompt word template.",
  "classification": "Classification",
  "classificationPopover": "Input question categories",
  "addQuestionClassification": "Add question category",
  "otherQuestionClassification": "Other problem categories",
  "questionClassificationReportPrefix": "Problems are categorized as",
  "questionClassificationPromptPopover": "You can add some specific content to better identify the user's question type. This content usually introduces something that the model does not know. You can use {{variable name}} to introduce variables from the input parameters.",
  "skill": "Skill",
  "generate": "Generate",
  "confirmUse": "Apply",
  "confirmUseTip": "No hint words available",
  "pleaseEnterTheCommandOnTheLeft": "Please enter the command on the left",
  "intelligentGeneration": "Intelligent generation",
  "enterCommand": "Input Command",
  "userPromptWordTemplate": "User prompt word template",
  "arrangeType": "Arrangement",
  "generatedTip": "Name and description cannot be empty",
  "askTip": "How can I help you?",
  "serchParamsSetting": "Search Parameter Configuration",
  "searchMode": "Search Mode",
  "quoteCap": "Max. Number of References",
  "lowestCorrelation": "Lowest Correlation",
  "rerank": "Re-sort Results",
  "retrieveSetting": "Search Settings",
  "semanticRetrieve": "Semantic search",
  "searchFilter": "Search and Filter",
  "selectRepositoryTips": "A maximum of five knowledge bases can be associated.",
  "selectedValueNotExist": " does not exist. Select another one.",
  "displayInDialogConfiguration": "Display in chat configuration",
  "visiblePopover": "<p>If this option is selected, </p>\n<p>this field will be displayed in chat configuration on the chat page and can be set by users.</p>",
  "forExample": "Example:",
  "searchArgsConfig": "Search Parameters",
  "public": "Public Access",
  "access": "Access",
  "logout": "Log Out",
  "login": "Log In",
  "startAsk": "Start asking a question",
  "please": "Please ",
  "preview": "Preview",
  "displayName": "Display Name",
  "paramDisplayNameCannotBeEmpty": "The display name cannot be empty.",
  "attributeDisplayNameMustBeUnique": "The display name must be unique.",
  "pleaseInsertDisplayName": "Enter a display name.",
  "startNodeNamePopover": "<p>Key of the input field. The value can contain only letters, </p>\n<p>digits, and underscores (_) and cannot start with a digit.</p>",
  "startNodeDisplayNamePopover": "Display name of the input field, which will be displayed in the chat configuration window.",
  "publishStatus": "Release Status",
  "ceateBlankApplication": "Create Blank Application",
  "importApplication": "Import Application",
  "uploadAppTip": "Only JSON files are supported, and only one application can be uploaded",
  "onlyOneApplicationTip": "Only one application can be uploaded",
  "fileNotUploaded": "No file uploaded.",
  "configurationErrorList": "Configuration Error List",
  "debugTips": "Resolve these issues before application release",
  "history": "Historical Records",
  "export": "Export",
  "doesNotExist": " does not exist.",
  "publishCheckTip": "Resolve the issues in the debugging list before application release",
  "openDebugManifest": "Open Debugging List",
  "currentProcess": "Number of issues to be resolved:",
  "pleaseFillUserInput": "Enter a value for the settable field",
  "requiredValidate": " is mandatory.",
  "startingNodeTip": "There is an error in the starting node configuration, please check the workflow configuration",
  "plsSelectKnowledge": "Please select the knowledge base",
  "integerValidateTip": "Enter a number ranging from -999999999 to 999999999",
  "numberValidateTip": "Enter a number ranging from -999999999.99 to 999999999.99",
  "plsEnterCorrectDebugParams": "Enter correct debugging parameters.",
  "notReleasedYetTip": "No data available.",
  "ApiKey": "API Key",
  "ApiDocument": "API Document",
  "ApiDocumentation": "View API Document",
  "chooseForm": "Select Form",
  "uploadFormTip": "The preview image file is missing",
  "uploadFormList": "The following files are missing in the package: ",
  "uploadFormImg": "The preview image cannot exceed 1 MB.",
  "uploadFormTotal": "The decompressed files cannot exceed 5 MB.",
  "intelligentForm": "Intelligent Forms",
  "createForm": "Create Form",
  "editForm": "Edit Form",
  "uploadIntelligentFormComponentPackage": "Intelligent Form Component Package",
  "plsUploadIntelligentFormComponentPackage": "Upload an intelligent form component package",
  "onlyOneFomrTip": "Only supports uploading one form",
  "uploadFormContent": "Only one form in ZIP format can be uploaded. The size of the decompressed file should not exceed 5MB and \n must include a form component preview image with a maximum size of 1 MB",
  "downloadTemplateForm": "Download Form Template",
  "componentPreview": "Component Preview Image",
  "emptyPreview": "No preview image available",
  "deleteModalTitle": "Confirm Deletion",
  "deleteModalEdit": "Confirm Edit",
  "youWillDelete": "The",
  "youWillEdit": "The",
  "form": "Form",
  "afterDelete": "form will be deleted. After deletion, the applications that use this form will be unavailable. Exercise caution when performing this operation",
  "afterEdit": "form will be edited. Once edited, the applications that use this form will be unavailable. Exercise caution when performing this operation",
  "deleteTip": "This will cause the running application to become unavailable, so please operate with caution.",
  "help": "Help",
  "formUploadTips": "The file name supports case-sensitive English and numbers and Chinese strings, and can contain underscores and underscores, but cannot begin or end with underscores and underscores",
  "implementationTutorialTitle": "How to Implement a Form Component",
  "implementationTutorialContent": "1. Download a suitable form template, such as React, Vue, or native HTML. \n 2. Develop the component code based on the README file in the template, start the frontend project locally, and check whether the component meets the expectation. \n 3. Compile the config.json file containing the input and output parameters of the component based on the README file in the template. \n 4. Add a form thumbnail with a maximum size of 1 MB based on the README file in the template. The thumbnail can be in JPG, PNG, or JPEG format.",
  "implementationTutorialContent1": "1. Define the input and output parameters of the form in the config.json file. \n 2. Add the logic for using data in a process to the component code based on the README file in the template. \n 3. During process orchestration, the data source of the form input parameters can be the output of a previous node or manually inputted data. Select a suitable method for transferring form input parameters.",
  "implementationTutorialContent2": "1. After developing component code, run the npm run build command in the root directory of the project to pack the code into the build folder. \n 2. Pack the build folder, config.json file, and form thumbnail into a ZIP package.",
  "implementationTutorialContent3": "1. Prepare the ZIP package of the form component. \n 2. On the form creation page, enter the form name and description, and upload the ZIP package. If no error message is displayed, click OK. The component package is successfully released.",
  "useTutorialTitle": "How to Use Data in a Process",
  "packTutorialTitle": "How to Pack",
  "publishTutorialTitle": "How to Release a Component Package",
  "uploadForm": "Form",
  "uploadDesc": "Description",
  "uploadCreateBy": "Creator",
  "uploadCreateAt": "Created",
  "uploadUpdateBy": "Updater",
  "uploadUpdateAt": "Updated",
  "uploadoperate": "Operation",
  "allowedHistoryRounds": "Allowed History Chat Rounds",
  "historyDialogRoundCannotBeEmpty": "The allowed history chat rounds cannot be empty.",
  "plsSelectAFormPreview": "Select form to preview",
  "noPreviewImg": "No preview",
  "formCannotBeEmpty": "The form cannot be empty.",
  "llmKnowledgePopover": "<p>You can use the knowledge retrieved by the previous node as the model context. </p>\n<p>If this function is enabled, the system automatically returns the source tracing information.</p>",
  "knowledge": "Knowledge",
  "conversationConfiguration": "Chat Configuration",
  "connect": "connect",
  "toConnect": "Go to Connect",
  "connectTip": "Connect to external knowledge base through plug-in, and connect to the system built-in knowledge base by default.",
  "iconHttp": "Icon",
  "requestConfig": "Request Configuration",
  "authentication": "Authentication",
  "requestMode": "Request method",
  "pleaseInputRequestUrl": "Please enter the request address",
  "timeout": "Timeout duration",
  "authType": "Authentication Type",
  "apiKey": "API Key",
  "custom": "Custom",
  "confirm": "confirm",
  "requestParams": "Request Parameters",
  "requestParamValue": "Parameter Value",
  "requestParamName": "Parameter name",
  "headerCanNotBeEmpty": "header cannot be empty",
  "apiKeyCanNotBeEmpty": "API Key cannot be empty",
  "addParam": "Add",
  "jsonCannotEmpty": "Json cannot be empty",
  "requestParamsTips": "<p>Set the relevant parameters of the HTTP request, you can use {{}} to</p>\n<p>Reference variables in the input, such as {{input}},</p>\n<p>where input is a variable in the input</p>",
  "httpInputTips": "<p>The input information of the http node can be found in the request parameter panel</p>\n <p>Input box, text area, through “{{}}” reference corresponding fields</p>",
  "httpOutputTips": "<p>Output content of http node:</p>\n <p>status indicates the interface status code, and a value in the range of [200,300) indicates a successful request;</p>\n<p>data indicates the original data returned by the interface, and data is empty if the interface call fails;</p>\n<p>errorMsg indicates the error message, and the error message will be displayed if the interface call fails.</p>",
  "paramsFieldNameRule": "Input can only contain letters, numbers, underscores, or the form {{variables}}",
  "intelligentCreate": "Intelligent Generation",
  "terminated": "Running stopped",
  "displayNameRule": "<p>Enter a string containing only letters, digits, hyphens (-), and underscores (_). </p>\n<p>The value cannot start or end with a hyphen (-) or underscore (_).</p>",
  "defineGroupTips": "Define group repetition prompt",
  "defineGroupDetailsTips": "Define group repetition prompt details",
  "defineGroupDetailsTitleTips": "The definition group uploaded is the same as the following definition group. Please check and confirm, otherwise the plug-in may not work properly!",
  "summary": "summary",
  "defineGroupNameRepeat": "Duplicate group name definition",
  "toolGroupNameRepeat": "Duplicate tool group name",
  "iframeTip": "Embed on website",
  "iframeTitle": "Embed the following iframe into your website at the desired location",
  "jsonRule": "Json cannot be empty",
  "textRule": "Text cannot be empty",
  "assignVariable": "Variable Assignment",
  "variableAggregationInputPopover": "<p>Function:</p>\n<p>Responsible for integrating the output results of different branches, ensuring that no matter which branch is executed, its results can be referenced and accessed through a unified variable.</p>\n<p>The integrated variables must be of the same type.</p>\n<p>Supplementary explanation:</p>\n<p>In a single-branch scenario, variable aggregation is based on the value of the last variable.</p>",
  "variableAggregationOutputPopover": "Output aggregated variable results",
  "fileExtractionConfig": "Extract description configuration",
  "fileExtractionConfigTips": "<p>Extract the prompt words of the file information, including two buttons for assisting in editing the prompt words:</p>\n<p>Click the right star button to open the AI ​​generated prompt word pop-up window;</p>\n<p>Click the right full screen button to open the full screen editing pop-up window.</p>",
  "fileExtractionOutputTips": "The output information of the file extraction node is the content extracted from the file by the large model according to the prompt word.",
  "fileExtractionPrompt": "File extraction prompt words",
  "fileExtractionInputTips": "<p>1. For files uploaded by user dialogue, please select the files field of the reference system context. </p>\n <p>2. For files from other custom sources, please select the appropriate reference. </p>\n<p> 3. Supports images, files, audio, and video (pdf/txt/docx/</p>\n<p>markdown/html/png/jpg/jpeg/mp3/mp4)</p>",
  "textToImageInputTips": "Enter the information that needs to be added to the creative description, which can be referenced by the creative description template",
  "textToImageOutputTips": "A structure list containing the URLs of generated images",
  "textToImageParamConfig": "Parameter settings",
  "textToImageConfigPanelHeader": "Creative Description",
  "textToImagePrompt": "Vincent map prompt words",
  "generateCount": "Generate quantity",
  "imageUnit": "sheet",
  "chatSupportedFileTypes": "Supported file types",
  "chatFileSizeTip": "The maximum size of a single file is 15MB.",
  "chatFileLimitTip": "Most uploaded",
  "uploading": "Uploading",
  "uploadFailed": "Upload failed",
  "uploadExceedLimit": "The file size cannot exceed 15MB",
  "uploadFailedTip": "Please delete the file that failed to upload and then continue the conversation",
  "waitFileSuccessTip": "After all files are uploaded successfully, the conversation will start",
  "alreadyUploaded": "Uploaded",
  "currentAvailableUpload": "Currently available",
  "file": "File",
  "clickUploadCountTip": "Uploaded files cannot exceed",
  "templateCreate": "Create from template",
  "createAppUsingTemplate": "Creating an application using a template",
  "createAppFromTemplate": "Creating an application from a template",
  "appCategoryCanNotBeEmpty": "Application category cannot be empty",
  "INTERNAL": "Preset in system",
  "EXTERNAL": "Third-party access",
  "common_divider_label": "Or",
  "common_gotoLogin_label": "Jump to Login",
  "common_gotoPrevious_label": "Go back to Previous",
  "common_noGotoLogin_desc": "You have logged in to the system and cannot redirect to the login page.",
  "common_noPermission_desc": "If you want to view this information, use an account with a higher privilege.",
  "common_noPermission_label": "The account does not have permissions",
  "common_notFound_desc": "Ensure that the access address is correct and try again later.",
  "common_notFound_label": "Sorry, page not found",
  "common_serverUnable_desc": " Ensure that all microservices have been started and try again later.",
  "common_serverUnable_label": "The service is unavailable",
  "formPrompt": "The imported node cannot automatically match the form and knowledge base. Please reconfigure it.",
  "max_editor_img": "A bulletin can contain up to 10 images.",
  "categoryTips": "Category names support case-sensitive English and numbers and Chinese strings, can contain underscores and underscores, but can not start or end with underscores and underscores.",
  "max_editor_count": "A bulletin can contain up to 5000 characters.",
  "terminateFormTip": "The end node uses a form, meaning the API that stops the chat cannot be called.",
  "resumingFormTip": "The end node uses a form, meaning the API that continues the chat cannot be called.",
  "restartFormTip": "The intelligent form node uses a form, meaning the API that restarts the chat cannot be called",
  "equal": "Equal to",
  "notEqual": "Not equal to",
  "contains": "Include",
  "doesNotContain": "Exclude",
  "longerThan": "Length greater than",
  "longerThanOrEqual": "Length greater than or equal to",
  "shorterThan": "Length less than",
  "shorterThanOrEqual": "Length less than or equal to",
  "startsWith": "Start with",
  "endsWith": "End with",
  "isEmpty": "is empty",
  "isNotEmpty": "is not empty",
  "isNull": "is null",
  "isNotNull": "is not null",
  "isTrue": "is true",
  "isFalse": "is false",
  "greaterThan": "Greater than",
  "greaterThanOrEqual": "Greater than or equal to",
  "lessThan": "Less than",
  "lessThanOrEqual": "Less than or equal to",
  "pleaseDeleteAndReconfigure": "Delete it and configure it again.",
  "send": "Send",
  "userQuestion": "User_Question",
  "cannotBeEarlier": "The release version cannot be lower than the current version",
  "currentVersion": "The current version is ",
  "autoSave": "AutoSave",
  "deployCanceledTips": "Deployed plug-ins that make running apps unavailable",
  "pluginDetails": "Plugin Details",
  "cannotExceed": "Size cannot be exceeded",
  "deletePlugin": "Delete Plugin",
  "deleteKnowledgeTips": "Cannot be recovered after deletion",
  "categoryNotBe": "Category name can't be",
  "deployCanceled": "You canceled",
  "noSelectedPlugin": "No selected plugin deployed.",
  "deployTip": "You will be deploying",
  "fileUploaded": "The file has been uploaded",
  "parseError": "Parse error",
  "fileNameError": "File name cannot contain Chinese characters",
  "tryLater": "The dialog is in progress, please try again later",
  "categoryDeletion": "Deletion is not reversible, please delete the child element first",
  "unstructuredData": "Unstructured Data",
  "structuredData": "Structured Data",
  "debugAlert": "The toolflow does not support debugging history at this time",
  "pluginReconfigurePrompt": "Delete the plugin node and configure it again.",
  "toolMarket": "Tool Market",
  "auth": "Authentication",
  "list": "List",
  "authTips": "The Service API uses `API-Key` for authentication. ***Developers are strongly recommended to store `API-Key` in the backend rather than sharing or storing it on the client to avoid leakage of `API-Key` and resulting in financial loss.*** All `API` requests should include your `API-Key` in the `Authorization` HTTP Header. As shown below:\n<code>Authorization: Bearer {API_KEY}</code>",
  "errorCodes": "Appendix: Error Codes",
  "newSession": "New Session",
  "reconversation": "Restart the conversation",
  "sseMode": "SSE method",
  "language": "Language",
  "editCode": "Edit Code",
  "testCode": "Test Code",
  "intelligentFormShowResult": "Display result using intelligent form",
  "parameterDescription": "Parameter Description: ",
  "notePlaceHolder": "This is a comment node.",
  "notSupportedUpload": "Upload not supported",
  "fileFormat": "File format",
  "appInformation": "Application Information",
  "similarityThresholdTips": "0 represents the highest relevance, and 10 represents the lowest relevance. That is, the closer to 0, the higher the relevance of the knowledge required to be queried, and the less knowledge is queried. When the value is 0, it means that the queried text and the knowledge base knowledge are completely consistent and can only be found.",
  "chatAgentTips": "The intelligent entity is being created. Please do not click on other pages, otherwise the creation may fail!",
  "pluginCannotBeEmpty": "Plugin cannot be empty",
  "chooseToBeLoopParam": "Set as loop parameter",
  "loopRadioIsRequired": "Need to select loop parameters",
  "loopSkillPopover": "You can select tools or workflows as the objects of loop calls",
  "thinking": "Thinking",
  "steps": "Steps",
  "toolResult": "Tool Result",
  "thinkProcess": "Thinking Process",
  "pushResultToChat": "Output results to chat",
  "codeErrorUnauthorized": "Login status has expired, please log in again",
  "codeErrorRequest": "Invalid request format. Please verify your input and retry",
  "codeErrorAccess": "Sorry, you do not have access to this resource",
  "codeErrorNotExist": "The requested resource does not exist. Please check if the access path is correct",
  "codeErrorInternal": "Internal server error, please try again later",
  "codeErrorGateway": "The current network connection is experiencing an issue. Please try again later",
  "codeErrorBusy": "The system is busy and in queue. Please try again later",
  "codeErrorTimeout": "Request response timeout, please check your network connection and try again",
  "appConfig": "App Configuration",
  "heatMap": "Heatmap",
  "appChatStyle": "App Interface Configuration",
  "appChatStyleCannotBeEmpty": "App interface configuration cannot be empty",
  "deletePluginTips": "Deletion cannot be undone and may cause running applications to become unavailable. Are you sure you want to delete?",
  "formItemOptionsValue": "Form Options",
  "formItemDefaultValue": "Default value of form items",
  "formItemRenderTypeCannotBeEmpty": "Rendering mode cannot be empty",
  "formItemRenderType": "Form item rendering method",
  "formItemType": "Form Item Type",
  "formItemDisplayName": "Form item display name",
  "formItemName": "Form item name",
  "formItemDisplayNameRule": "A string that can only contain uppercase and lowercase English letters, numbers, and Chinese characters. It can contain hyphens and underscores, but cannot start or end with a hyphen or underscore.",
  "formItemDisplayNameCannotBeEmpty": "Display name cannot be empty",
  "formItemDisplayNameMustBeUnique": "Display name must be unique",
  "pleaseInsertFormItemDisplayName": "Please enter a display name",
  "formItemNameCannotBeEmpty": "Name cannot be empty",
  "formItemNameMustBeUnique": "The name must be unique",
  "pleaseInsertFormItemName": "Please enter a name",
  "formItem": "Form Items",
  "arrangementTechniques": "Arrangement",
  "agent": "Agent",
  "conversationAssistant": "Conversational Assistant",
  "applicationType": "Application Type",
  "modelNotExistTip": "Does not exist, please select again",
  "ApiSecretKey": "API Key",
  "rerankParam": "Rearrange results",
  "similarityThreshold": "Minimum relevance",
  "referenceLimit": "Citation limit",
  "share": "Share",
  "edit": "Edit",
  "homepage": "Home",
  "shareConversation": "Share Conversation",
  "releaseTime": "Release Time",
  "team": "Team",
  "mine": "Mine",
  "noDescription": "No description",
  "checkMore": "View Details",
  "plsChoose": "Please select",
  "plsChooseHFModel": "Select HuggingFace Model",
  "reset": "Reset",
  "save": "Save",
  "fullscreen": "Fullscreen",
  "pluginDetails2": "Plugin Orchestration Details",
  "workflow": "Workflow",
  "addWorkflow": "Add Workflow",
  "by": "By",
  "analyse": "Analyze",
  "feedback": "Feedback",
  "evaluate": "Evaluate",
  "platformTitle": "Your Exclusive AI Orchestration R&D Platform",
  "platformSubTitle": "AI-powered development, start creating your custom applications~",
  "modelEngine": "ModelEngine",
  "modelEngineGreet1": "Hi~ I'm ModelEngine's super application",
  "modelEngineGreet2": "I can",
  "modelEngineGreet3": "Call other applications",
  "modelEngineGreet4": "Collaborate, and also",
  "modelEngineGreet6": "Try asking me something~",
  "createWorkflow": "Create Workflow",
  "support": "Support",
  "character": "Character",
  "number": "Number",
  "arrange": "Orchestrate",
  "draft": "Draft",
  "clickReturn": "Click to return",
  "manualForm": "Manual Intervention Form",
  "createAppDescription": "Easily customize your exclusive application by chatting with ModelEngine - Upload your own data, train knowledge base models, and bring more value to your business. Start creating your app now!",
  "appTreasure": "Application Treasure Box",
  "appTreasureDescription": "We have a vast collection of applications that allow you to easily access and deploy various professional applications, covering different fields and functions. Start your application market exploration journey now.",
  "chat": "Chat",
  "clearCurrentChat": "Confirm to clear current chat",
  "clearCurrentChatContent": "After clearing, the chat content in the current window will not be saved by the system.",
  "zeroCostTime": "0 hours 0 minutes 0 seconds",
  "hour": "hour",
  "minute": "minute",
  "second": "second",
  "today": "Today",
  "yesterday": "Yesterday",
  "last7Days": "Last 7 Days",
  "last30Days": "Last 30 Days",
  "thisWeek": "This Week",
  "lastWeek": "Last Week",
  "thisMonth": "This Month",
  "lastMonth": "Last Month",
  "totalRequestNum": "Total Requests",
  "totalPV": "Total Active Users",
  "averRspSpeed": "Average Response Speed",
  "userAccessTrend": "User Access Trend",
  "collections": "Select Favorite Applications",
  "defaultApp": "Default Application",
  "startChat": "Start Chat",
  "setDefaultApp": "Set as Default",
  "cancelDefaultApp": "Cancel Default",
  "uploadFileContent": "Parse files or chat with applications through files",
  "dragFile": "Drag file here or click to upload",
  "fileType": "Supports pdf, docx, image files",
  "uploadFileLabel": "Upload Text File",
  "uploadFileFail": "File upload failed",
  "uploadImageFail": "Image upload failed",
  "noSupportFileType": "File type not supported",
  "fileFormatError": "File format error",
  "fileFormatError1": "Only .txt files are allowed",
  "fileFormatError2": "Only .xlsx files are allowed",
  "fileFormatError3": "Only one file can be uploaded at a time",
  "importData": "Import Data",
  "piece": "piece",
  "num": "",
  "dataPieces": "Data Count",
  "editSuccess": "Edit succeeded",
  "flowUpdateSuccess": "Workflow updated successfully",
  "startRunFail": "Failed to start running",
  "debugFail": "Debugging failed",
  "addPluginSuccess": "Plugin added successfully",
  "addPluginWarning": "Total number of orchestration nodes cannot exceed 100",
  "addNodeWarning": "Number of identical nodes cannot exceed 20",
  "getDetailFail": "Failed to get details",
  "pickOneFile": "Please select a file",
  "pickFile": "Please select files",
  "noFile": "No file",
  "fileCannotEmpty": "File cannot be empty",
  "addLine": "Add row",
  "otherIndex": "Other index",
  "vectorIndex": "Vector index",
  "colName": "Column name",
  "dataType": "Data type",
  "indexType": "Index type",
  "addCol": "Add column",
  "knowledgeCreated": "Congratulations, your knowledge base has been created",
  "enterNameRule": "Input length: 1 - 64 characters",
  "expandArrange": "Expand orchestration area",
  "consumer": "Custom",
  "cannotBeEmpty": "Input cannot be empty",
  "none": "None",
  "parseFile": "Please parse the following file",
  "selectConversation": "Please select conversation",
  "isSelected": "Selected",
  "copiedLinkTitle": "Share link copied, send it to your friends",
  "copiedLink": "Copy link",
  "selectedWarning": "Q&A group is selected, please cancel first",
  "answers": "Answers",
  "fileContent": "File content",
  "collapse": "Collapse",
  "open": "Open",
  "stopped": "Stopped",
  "playback": "Playback",
  "allApplications": "All Applications",
  "alreadyShelves": "Published",
  "waterFlow": "Flow",
  "describe": "Description",
  "aTeam": "A Team",
  "maxUploadTips": "Maximum upload limit: 5 files",
  "creator": "Creator:",
  "myFavorites": "My Favorites",
  "myWaterFlow": "My Workflows",
  "characterLength": "Input character length range",
  "greenfield": "New",
  "download": "Download",
  "toolFlowConfiguration": "Workflow Configuration",
  "successReleased2": "Workflow published successfully",
  "releaseToolFlow": "Publish Workflow",
  "debugTip2": "Debugging must succeed before publishing workflow",
  "runningTip": "Test running",
  "runningTip2": "Run succeeded",
  "runningTip3": "Run failed",
  "notContain": "Does not contain",
  "selectLlm": "Select an appropriate LLM",
  "whitespacePrompt": "Spaces are not allowed",
  "promptHolder": "Prompt example: Role: You are a smart life assistant.\nBackground: As an application integrating multiple smart functions, you need to be familiar with various smart home devices, schedules, health data and related knowledge.\nSkills: Smart home control (lighting, temperature, security), schedule management (reminders, arrangements), health monitoring (sleep, exercise, diet), information queries, voice interaction, etc.\nGoal: Provide convenience for users.\nLimitations: You can access users' smart home devices, calendars, health data and related information, and operate/respond as needed.",
  "additions": "Add",
  "multimodal": "Multimodal",
  "selectMultimodal": "Select Multimodal",
  "editedProcess": "There are nodes being edited, please handle them first",
  "appConfiguration": "Application Capability Configuration",
  "knowledgeBaseTeam": "Knowledge Base Team",
  "knowledgeBaseName": "Knowledge Base Name",
  "knowledgeBaseDesc": "Knowledge Base Description",
  "knowledgeTableName": "Knowledge Table Name",
  "knowledgeOverview": "Knowledge Base Overview",
  "createKnowledgeBase": "Create Knowledge Base",
  "knowledgeBaseDetail": "Knowledge Base Details",
  "addingKnowledgeTable": "Adding Knowledge Table",
  "deleteKnowledgeBase": "Delete Knowledge Base",
  "typeSelection": "Type Selection",
  "backendService": "Backend Service",
  "newFeatures": "New Features",
  "optimized": "Optimized",
  "repair": "Fixed",
  "formatting": "Format",
  "text": "Text",
  "table": "Table",
  "yes": "Yes",
  "no": "No",
  "isImportData": "Import data?",
  "dataSource": "Select Data Source",
  "finished": "Completed",
  "tableConfig": "Table Configuration",
  "startImport": "Start Import",
  "import": "Import",
  "importingData": "Importing Data",
  "previousStep": "Previous",
  "nextStep": "Next",
  "importTasks": "import tasks in progress",
  "textSegmentation": "Text Segmentation & Cleaning",
  "stringLengthTips": "String length cannot exceed 255",
  "invalidAuthTip": "Enable permission management",
  "invalidRecommendTip": "Enable 'Guess What You Need' feature",
  "invalidInfoTip": "Switch inspiration categories after enabling",
  "selectPlugin": "Select Plugin",
  "huggingFace": "HuggingFace",
  "langChain": "LangChain",
  "llamaIndex": "LlamaIndex",
  "older": "Older",
  "recordTip": "Click to start voice recording, click again to stop",
  "basicArrange": "Basic Orchestration",
  "basicArrangeDescription": "No-code, quickly orchestrate standard RAG applications",
  "workflowArrange": "Workflow Orchestration",
  "workflowArrangeDescription": "For advanced users",
  "selectHistoryRecordMode": "Select history recording mode",
  "conversationBackgroundPlaceHolder": "Example:\n1. Current time: {ttcTime}. You are a lab booking assistant whose task\nis to help users book labs by extracting booking information from text.\n2. You are a Google search assistant who needs to extract appropriate search terms from text.",
  "customPlugin": "Custom Plugin",
  "httpPlugin": "HTTP Plugin",
  "paramMapping": "Value",
  "describeMessage": "Please enter a description",
  "requestType": "Request Type",
  "defaultValue": "Default Value",
  "createHttp": "Creating an Http Plugin",
  "basicInfo": "Basic Information",
  "methodDefinition": "Method Definition",
  "informationConfiguration": "Http information configuration",
  "inputParameter": "Input parameter definition",
  "connectConfiguration": "Connection Configuration",
  "paramConfiguration": "Parameter configuration",
  "outPutParameter": "Output parameter definition",
  "describeMessageLength": "Input character length range: 1 - 100",
  "method": "Method",
  "methodMessage": "Please select method",
  "url": "Url",
  "urlMessage": "Please enter the URL",
  "plsEnterValidUrl": "Please enter a valid URL",
  "thirdPartyTool": "Third-party tool access",
  "addInputParam": "Please add input parameter definition",
  "addOutputParam": "Please add output parameter definition",
  "workFlow": "Workflow",
  "inspirationFunctionDescription": "Pre-made frequently used questions can be used directly during conversations. It is recommended to create a first-level category.",
  "openPermissionManagement": "Enable permission management",
  "inspirationPermissionTips": "Authentication is performed through the inspiration encyclopedia category tree. After the category tree is turned on, a new dialogue will be created when switching.",
  "retrievalIndexType": "Search Mode",
  "formItemNameRule": "Can only contain letters, numbers, or underscores, and must start with a letter or underscore",
  "copyApp": "Applicaton Replication",
  "copyAppFailed": "Applicaton Replication Failed",
  "CreatedFailed": "Created Failed",
  "displayAllNodes": "Display all nodes",
  "handMode": "Hand mode",
  "reorganizeNodes": "Organize nodes",
  "zoomOut": "Zoom Out",
  "zoomIn": "Zoom In",
  "formItemFieldTypeCannotBeEmpty": "Field type is required",
  "addParallelTask": "Add Parallel Tasks",
  "recover": "recover",
  "exit": "exit",
  "resetSucceed": "Reset Succeed",
  "currentDraft": "Current Draft",
  "loading": "Loading",
  "noMore": "You've reached the end",
  "latest": "latest",
  "north": {
    "api": {
      "chat": {
        "summary": "New session API",
        "request": {
          "description": "Session information, including data required to create a session"
        },
        "description": "This interface sends a question to the large model and initiates a conversation. Supports streaming call methods: SSE.",
        "parameters": {
          "tenantId": {
            "description": "The tenant's unique identifier"
          },
          "appId": {
            "description": "The application's unique identifier"
          }
        }
      },
      "restartChat": {
        "summary": "Restart Chat API",
        "request": {
          "description": "Additional information required to restart a conversation, such as whether to use multi-round conversations, etc."
        },
        "description": "This interface can restart a specified conversation. You need to specify the instance ID of the conversation to be restarted and can add additional information",
        "parameters": {
          "tenantId": {
            "description": "Unique identifier of the tenant"
          },
          "currentInstanceId": {
            "description": "The unique identifier of the instance for which the session needs to be restarted"
          }
        }
      },
      "appConfig": {
        "summary": "Query application configuration details",
        "description": "This interface can be used to query the configuration details of a specified application using the unique identifier of the application to be queried.",
        "parameters": {
          "tenantId": {
            "description": "The unique identifier of the tenant"
          },
          "appId": {
            "description": "The unique identifier of the app to be queried"
          }
        }
      },
      "uploadFile": {
        "summary": "Upload file",
        "description": "This interface can upload files to a specified application."
      },
      "getInspiration": {
        "summary": "Get Inspiration",
        "description": "This interface can get all inspirations under a specific inspiration category of a specified application.",
        "parameters": {
          "tenantId": {
            "description": "Unique identifier of the tenant"
          },
          "appId": {
            "description": "Unique identifier of the application"
          },
          "categoryId": {
            "description": "Unique identifier of the inspiration category"
          }
        }
      },
      "getChatHistory": {
        "summary": "Query session history",
        "description": "This interface is used to query the session history of a specified tenant and filter it based on specified conditions.",
        "parameters": {
          "tenantId": {
            "description": "The unique identifier of the tenant"
          },
          "offset": {
            "description": "Offset"
          },
          "limit": {
            "description": "Number of records per page"
          },
          "appId": {
            "description": "Unique identifier of the application"
          },
          "appState": {
            "description": "Application status"
          }
        }
      },
      "deleteChat": {
        "summary": "Delete Chat API",
        "description": "This interface is used to delete one or more chats under a specified application.",
        "parameters": {
          "tenantId": {
            "description": "Unique identifier of the tenant"
          },
          "app_id": {
            "description": "The unique identifier of the application"
          },
          "chat_id": {
            "description": "The unique identifier of the chat session to be deleted. If not specified, all chats will be deleted"
          }
        }
      },
      "getCategory": {
        "summary": "Get inspiration categories",
        "description": "This interface can be used to retrieve all inspiration categories under an application using the application's unique identifier.",
        "parameters": {
          "tenantId": {
            "description": "The tenant's unique identifier"
          },
          "appId": {
            "description": "The application's unique identifier"
          }
        }
      },
      "getAppList": {
        "summary": "Query user application list",
        "description": "This interface can be used to filter the user application list based on specified conditions, such as application ID, application name, and status.",
        "parameters": {
          "tenantId": {
            "description": "Unique identifier of the tenant"
          },
          "ids": {
            "description": "List of IDs to query"
          },
          "name": {
            "description": "Name to query"
          },
          "state": {
            "description": "Status of the query"
          },
          "excludeNames": {
            "description": "Names to exclude"
          },
          "offset": {
            "description": "Offset"
          },
          "limit": {
            "description": "Number of records per page"
          },
          "type": {
            "description": "Query type"
          }
        }
      },
      "getChatHistoryById": {
        "summary": "Query chat history",
        "description": "Query instance history by specifying chatId (query the last 10 instances)."
      },
      "createFeedback": {
        "summary": "Create user feedback record",
        "description": "This interface is used to create user feedback records for a conversation instance."
      },
      "updateFeedback": {
        "summary": "Update user feedback records",
        "description": "This interface is used to update user feedback records for a conversation instance."
      },
      "getFeedback": {
        "summary": "Query user feedback records",
        "description": "This interface can query the feedback records of an instance using its unique identifier."
      },
      "oldChat": {
        "summary": "Old version of the conversation interface",
        "description": "Chat interface for transmitting chat information",
        "parameters": {
          "tenant_id": {
            "description": "Unique identifier for the tenant"
          }
        }
      }
    },
    "schema": {
      "AppMetadata": {
        "msg": {
          "description": "Status information"
        },
        "code": {
          "description": "Status code"
        }
      },
      "AppBuilderAppDto": {
        "baselineCreateAt": {
          "description": "Creation time"
        },
        "configFormProperties": {
          "description": "Application configuration items"
        },
        "publishedUpdateLog": {
          "description": "aipp published update log"
        },
        "appCategory": {
          "description": "Application category"
        },
        "updateAt": {
          "description": "Update time"
        },
        "type": {
          "description": "Application Type"
        },
        "publishedDescription": {
          "description": "aipp Published Description"
        },
        "version": {
          "description": "Version"
        },
        "createAt": {
          "description": "Creation Time"
        },
        "publishUrl": {
          "description": "aipp Publication Link"
        },
        "createBy": {
          "description": "Creator"
        },
        "updateBy": {
          "description": "Updater"
        },
        "name": {
          "description": "Application Name"
        },
        "chatUrl": {
          "description": "Chat short link address"
        },
        "id": {
          "description": "Application unique identifier"
        },
        "state": {
          "description": "Application status"
        }
      },
      "FileUploadInfo": {
        "msg": {
          "description": "Status information"
        },
        "code": {
          "description": "Status code"
        }
      },
      "PromptCategory": {
        "parent": {
          "description": "Parent category"
        },
        "children": {
          "description": "Child category"
        },
        "disable": {
          "description": "Whether it can be selected"
        },
        "id": {
          "description": "Unique identifier for the inspiration category"
        },
        "title": {
          "description": "Inspiration category title"
        }
      },
      "ChatRequest": {
        "chatId": {
          "description": "conversation ID"
        },
        "question": {
          "description": "Question"
        }
      },
      "String": {
        "data": {
          "description": "Data"
        }
      },
      "ChatRequest$Context": {
        "useMemory": {
          "description": "Whether to use history"
        },
        "dimensionId": {
          "description": "Product ID information"
        },
        "atChatId": {
          "description": "at Other applications' dialogs"
        },
        "userContext": {
          "description": "User-defined conversation field input information, corresponding to the start node configuration"
        },
        "dimension": {
          "description": "Product information"
        },
        "atAppId": {
          "description": "at other applications"
        }
      },
      "PromptInfo$AppBuilderPromptVarDataDtoAdapter": {
        "varType": {
          "description": "Display format of prompt variable values"
        },
        "sourceInfo": {
          "description": "Source information of prompt variable values"
        },
        "sourceType": {
          "description": "The type of source for the prompt variable value"
        },
        "var": {
          "description": "The prompt variable"
        },
        "multiple": {
          "description": "Whether multiple selections are allowed"
        },
        "key": {
          "description": "Unique key for prompt variable"
        }
      },
      "PromptInfo$AppBuilderInspirationDtoAdapter": {
        "auto": {
          "description": "Whether to execute automatically"
        },
        "promptVarData": {
          "description": "Prompt variable"
        },
        "name": {
          "description": "Inspiration name"
        },
        "description": {
          "description": "Description"
        },
        "id": {
          "description": "Unique identifier for the inspiration"
        },
        "category": {
          "description": "Category"
        },
        "prompt": {
          "description": "Prompt"
        },
        "promptTemplate": {
          "description": "Prompt template"
        }
      },
      "UsrFeedbackDto": {
        "instanceId": {
          "description": "Instance ID"
        },
        "usrFeedback": {
          "description": "User feedback -1 No feedback 0 Like 1 Dislike"
        },
        "usrFeedbackText": {
          "description": "User feedback text"
        },
        "id": {
          "description": "Feedback record ID"
        }
      },
      "CreateAppChatRequest": {
        "chat_id": {
          "description": "Optional - ID of the current conversation, generated after the first conversation, which can be used for subsequent conversations"
        },
        "question": {
          "description": "Question to ask the large model"
        },
        "app_id": {
          "description": "ID of the app used for the conversation"
        }
      },
      "CreateAppChatRequest$Context": {
        "use_memory": {
          "description": "Whether to use historical conversation records during the conversation. Enabling this will allow historical conversation data to influence the large model's responses"
        },
        "dimension_id": {
          "description": "The question to ask the large model"
        },
        "at_chat_id": {
          "description": "Reference to other application conversations"
        },
        "user_context": {
          "description": "User-defined input information for conversation fields, corresponding to the start node configuration"
        },
        "dimension": {
          "description": "Product information"
        },
        "at_app_id": {
          "description": "Reference to other applications"
        }
      }
    },
    "resOkCode": {
      "200": "The request was successfully processed and response data was returned.",
      "201": "The request was successfully processed and resulted in the creation of a new resource.",
      "204": "The request was successfully processed, but no content was returned.",
      "205": "The request was successfully processed; please reset the current document view on the client side."
    },
    "resCode": {
      "400": "Request error: the data sent by the client or the request format is incorrect.",
      "403": "The request is valid, but the client does not have permission to access the resource.",
      "404": "The requested resource does not exist, possibly due to an incorrect URL or the resource being deleted.",
      "500": "Server internal error, please contact the administrator."
    },
    "wssApiData": {
      "info": {
        "title": "WebSocket Chat",
        "description": "A real-time WebSocket chat service that allows users to send and receive messages."
      },
      "servers": {
        "description": "WebSocket server for chat applications"
      },
      "paths": {
        "/chat": {
          "summary": "Send chat message.",
          "description": "This interface sends a question message to the large model and starts a conversation. Both SSE and WebSocket streaming modes are supported.",
          "First Request": {
            "summary": "Establish WebSocket connection"
          },
          "Websocket Request": {
            "summary": "Send chat message request",
            "description": "Used to send a chat message request to the large model service, including the question, context, and memory usage parameters.",
            "requestBody": {
              "description": "Request message content, including chat parameters, question, and context, formatted as a JSON string.",
              "content": {
                "schema": {
                  "requestId": {
                    "description": "Unique identifier for the request"
                  },
                  "params": {
                    "tenantId": {
                      "description": "Tenant ID, used to identify the source of the request"
                    },
                    "data": {
                      "app_id": {
                        "description": "App ID associated with the request"
                      },
                      "question": {
                        "description": "User's question"
                      },
                      "context": {
                        "description": "Session information required to create the conversation",
                        "use_memory": {
                          "description": "Whether to use memory, which may affect the way content is generated"
                        },
                        "user_context": {
                          "description": "User context information, such as user preferences or history"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Websocket responses": {
            "description": "Request succeeded, returns the result processed by the large model. The result consists of multiple data stream messages, and finally forms the complete data stream content.",
            "content": {
              "schema": {
                "status": {
                  "description": "Current message status"
                },
                "answer": {
                  "description": "Array of messages",
                  "items": {
                    "content": {
                      "description": "Message content",
                      "formId": {
                        "description": "Form ID, if any"
                      },
                      "formVersion": {
                        "description": "Form version"
                      },
                      "formArgs": {
                        "description": "Form parameters"
                      },
                      "msg": {
                        "description": "Message text content"
                      },
                      "formAppearance": {
                        "description": "Form appearance settings"
                      },
                      "formData": {
                        "description": "Form data"
                      }
                    },
                    "type": {
                      "description": "Message type"
                    },
                    "msgId": {
                      "description": "Message ID"
                    }
                  }
                },
                "chat_id": {
                  "description": "Unique identifier for the current chat"
                },
                "at_chat_id": {
                  "description": "Mentioned chat ID, if any"
                },
                "instance_id": {
                  "description": "Instance ID of the current chat"
                },
                "log_id": {
                  "description": "Unique identifier for the current log"
                }
              }
            }
          }
        }
      }
    },
    "oldWssAPIData": {
      "info": {
        "title": "WebSocket Chat",
        "description": "A real-time WebSocket chat service that allows users to send and receive messages."
      },
      "servers": {
        "description": "WebSocket server for chat applications"
      },
      "paths": {
        "/chat": {
          "summary": "Send chat message.",
          "description": "This interface sends a question message to the large model and starts a conversation. Both SSE and WebSocket streaming modes are supported.",
          "First Request": {
            "summary": "Establish WebSocket connection"
          },
          "Websocket Request": {
            "summary": "Send chat message request",
            "description": "After establishing the websocket connection, send the chat request via the websocket session and receive the chat response.",
            "requestBody": {
              "description": "After the websocket connection is established, send the chat request via the message structure in the response.",
              "content": {
                "schema": {
                  "requestId": {
                    "description": "Unique identifier for the request. Each stream in the websocket response will carry the requestId, which is used to distinguish which request the streaming message belongs to when reusing the session."
                  },
                  "method": {
                    "description": "The name of the method to be used for the websocket request. Currently, only appChat is supported."
                  },
                  "params": {
                    "data": {
                      "app_id": {
                        "description": "The app id used for the conversation"
                      },
                      "chat_id": {
                        "description": "The id of the current conversation, generated after the first conversation, and can be used for continuous conversation afterwards"
                      },
                      "question": {
                        "description": "The question to ask the large model"
                      },
                      "context": {
                        "description": "Session information required to create the conversation",
                        "use_memory": {
                          "description": "Whether to use historical conversation records. When enabled, historical data will affect the model's answer"
                        },
                        "user_context": {
                          "description": "User context information, such as user preferences or history"
                        },
                        "at_app_id": {
                          "description": "Reference to another application"
                        },
                        "at_chat_id": {
                          "description": "Reference to another application's conversation"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Websocket responses": {
            "description": "Request succeeded, returns the result processed by the large model. The result consists of multiple data stream messages, and finally forms the complete data stream content.",
            "content": {
              "schema": {
                "requestId": {
                  "description": "Unique identifier for the request. Each stream in the websocket response will carry the requestId, which is used to distinguish which request the streaming message belongs to when reusing the session."
                },
                "code": {
                  "description": "Status code of the request result. 0 means normal, other values indicate errors."
                },
                "msg": {
                  "description": "Error message when the interface execution fails. When code is 0, msg is null."
                },
                "data": {
                  "description": "The data returned by the interface in streaming mode. The specific structure depends on the called interface. In websocket failure or completion responses, data is null.",
                  "status": {
                    "description": "Current message status"
                  },
                  "answer": {
                    "description": "Array of messages",
                    "items": {
                      "content": {
                        "description": "Message content",
                        "content": {
                          "description": "The response object of the large model. The content depends on the value of the type field. In the first streaming data block of app_chat, content represents the definition of the input question; otherwise, it represents the output of the large model."
                        },
                        "type": {
                          "description": "The type of the content field in the answer. The value can be QUESTION or MSG, representing the question and the model's answer respectively."
                        },
                        "msgId": {
                          "description": "The id of the model's response message"
                        }
                      }
                    }
                  },
                  "chat_id": {
                    "description": "The id of the current conversation round. Q&A with the same chat_id belong to the same round. Previous Q&A in the same round become history for subsequent Q&A. When use_memory is enabled, it will affect the model's answer."
                  },
                  "at_chat_id": {
                    "description": "The id of the referenced conversation round"
                  },
                  "instance_id": {
                    "description": "The id of the current Q&A instance. One instance_id usually corresponds to one Q&A."
                  },
                  "log_id": {
                    "description": "The id of the current Q&A record. Both user questions and model answers have a unique, incrementing logId."
                  }
                },
                "completed": {
                  "description": "Indicates whether the streaming response is finished. In websocket failure or completion responses, completed is true."
                }
              }
            }
          },
          "parameters": {
            "tenant_id": {
              "description": "Unique identifier for the tenant"
            }
          }
        }
      }
    },
    "oldSseApiData": {
      "status": {
        "description": "Indicates the status of the large model response. The response status can be one of three states: READY, RUNNING, and ARCHIVED. READY status indicates that the large model has received the conversation question; RUNNING status indicates that the conversation is in progress, and in this state, the conversation model's output results will be returned in streaming mode; ARCHIVED status indicates that the streaming response has ended, and the returned data will contain the complete large model output."
      },
      "answer": {
        "description": "Large model's answer",
        "items": {
          "content": {
            "description": "The response object of the large model. The content depends on the value of the type field. In the first streaming data block of app_chat, content represents the definition of the input question; otherwise, it represents the output of the large model."
          },
          "type": {
            "description": "The type of the content field in the answer. The value can be QUESTION or MSG, representing the question and the model's answer respectively."
          },
          "msgId": {
            "description": "The id of the model's response message"
          }
        }
      },
      "chat_id": {
        "description": "The id of the current conversation round. Q&A with the same chat_id belong to the same round. Previous Q&A in the same round become history for subsequent Q&A. When use_memory is enabled, it will affect the model's answer."
      },
      "at_chat_id": {
        "description": "The id of the referenced conversation round"
      },
      "instance_id": {
        "description": "The id of the current Q&A instance. One instance_id usually corresponds to one Q&A."
      },
      "log_id": {
        "description": "The id of the current Q&A record. Both user questions and model answers have a unique, incrementing logId."
      }
    },
    "errorCodeData": {
      "0": "success",
      "90000000": "Invalid parameter: {parameter info}.",
      "90000001": "Resource not found: {resource info}.",
      "90000002": "Internal server error, please contact the administrator.",
      "90000003": "Operation forbidden.",
      "90001001": "System error, failed to create process. Please retry or contact the administrator.",
      "90001002": "No ongoing conversation, no need to terminate.",
      "90001003": "Conversation is in progress and cannot be deleted.",
      "90001011": "Configuration error, please check if the workflow orchestration is correct. Error reason: {error info}.",
      "90001012": "Duplicate application property exists.",
      "90001013": "Application name cannot be empty.",
      "90001014": "Application name already exists.",
      "90001015": "Application instance log is empty.",
      "90002000": "File upload failed.",
      "90002001": "File expired or corrupted.",
      "90002002": "Failed to parse file content.",
      "90002003": "Invalid file path.",
      "90002900": "JSON parsing failed. Reason: {error info}.",
      "90002901": "JSON encoding failed. Reason: {error info}.",
      "90002902": "Failed to retrieve history.",
      "90002903": "System error, failed to get application configuration. Please contact the administrator.",
      "90002904": "Failed to get inspiration prompt variables. Please contact the administrator.",
      "90002905": "Failed to parse history configuration.",
      "90002906": "Please check the variables in the prompt template.",
      "90002908": "Unsupported data type [type: {data type}].",
      "90002909": "Task does not exist.",
      "90002918": "Conversation request structure is incorrect.",
      "90002919": "The application is not published and cannot be used for conversation.",
      "90002920": "@Application conversation error. Please clear the cache and try again.",
      "90002921": "Debug conversation failed. Please retry.",
      "90002922": "Conversation response error. Please retry.",
      "90002924": "Application does not exist or has been deleted.",
      "90002925": "Conversation failed: application does not exist or has been deleted.",
      "90002927": "Please enter your question.",
      "90002928": "Instance id \"{specific instance}\" does not match any parent instance id.",
      "90002929": "Instance id \"{specific instance}\" does not match any conversation.",
      "90002930": "Sorry, there are too many users in the queue. Please try again later. Thank you.",
      "90002933": "System error, failed to get application orchestration information. Please contact the administrator.",
      "90002935": "System error, file format validation failed. Please contact the administrator.",
      "90002936": "System error, model node failed to parse file. Please contact the administrator.",
      "90002938": "System error, failed to get conversation history. Please contact the administrator.",
      "90002939": "System error, failed to restart conversation. Please contact the administrator.",
      "90002940": "System error, failed to get application information. Please contact the administrator.",
      "90002946": "Audio file splitting failed. Please change the audio file or try again.",
      "90002947": "Audio file summary content is empty. Please change the audio file or try again.",
      "90002948": "Failed to extract audio file content. Please change the audio file or try again.",
      "90002950": "System error, model service unavailable. Please check the model status or contact the administrator.",
      "90002951": "System error, invalid parameters for large model call. Please contact the administrator.",
      "90002952": "System error, failed to call large model service. Please contact the administrator.",
      "90002953": "Conversation does not exist or has been deleted.",
      "90002954": "System error, failed to terminate conversation. Please contact the administrator.",
      "90002955": "System error, failed to continue conversation. Please retry or contact the administrator.",
      "10007503": "System error, tool flow orchestration failed to run. Please contact the administrator.",
      "10000003": "Invalid input parameter. The invalid parameter is {error info}.",
      "10007511": "Error occurred while executing condition node.",
      "10007521": "Process execution exception. Please retry.",
      "90002956": "Tool invocation exception. Please check the tool and try again.",
      "90002957": "Tool lookup exception. Please check the tool and try again.",
      "90002958": "Network connection problem. Please check your network and try again.",
      "90002959": "Duplicate plugin. Please change the plugin and try again.",
      "90002960": "Error in node {error node}. Cause: tool {error tool} execution error, {error info}",
      "90002961": "Error in node {error node}. Cause: {error info}",
      "90002962": "Execution error. Cause: tool {error tool} execution error, {error info}",
      "90002963": "Execution error. Cause: {error info}",
      "90002965": "Parent node of form property does not exist.",
      "90002973": "Invalid path format.",
      "90002998": "License expired."
    },
    "guestMode": "Guest Mode",
    "guestTips": "Guest mode has no access authentication, there are potential threats such as data leakage, please use with caution."
  }
}
